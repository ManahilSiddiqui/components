{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manah\\\\Desktop\\\\prod2\\\\components\\\\components\\\\src\\\\pages\\\\CounterPage.js\",\n  _s = $RefreshSig$();\nimport produce from 'immer';\nimport { useReducer } from 'react';\nimport Button from '../components/Button';\nimport Panel from '../components/Panel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INCREMENT_COUNT = 'increment';\nconst SET_VALUE_TO_ADD = 'change_value_to_add';\nconst DECREMENT_COUNT = 'decrement';\nconst ADD_VALUE_TO_COUNT = 'add_value_to_count';\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case INCREMENT_COUNT:\n      state.count = state.count + 1;\n      return;\n    case DECREMENT_COUNT:\n      state.count = state.count - 1;\n    case ADD_VALUE_TO_COUNT:\n      return {\n        ...state,\n        count: state.count + state.valueToAdd,\n        valueToAdd: 0\n      };\n    case SET_VALUE_TO_ADD:\n      return {\n        ...state,\n        valueToAdd: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction CounterPage({\n  initialCount\n}) {\n  _s();\n  // const [count, setCount] = useState(initialCount);\n  //  const [valueToAdd, setValueToAdd] = useState(0);\n  const [state, dispatch] = useReducer(produce(reducer), {\n    count: initialCount,\n    valueToAdd: 0\n  });\n  const increment = () => {\n    dispatch({\n      type: INCREMENT_COUNT\n    });\n  };\n  const decrement = () => {\n    dispatch({\n      type: DECREMENT_COUNT\n    });\n  };\n  const handleChange = event => {\n    const value = parseInt(event.target.value) || 0;\n    dispatch({\n      type: SET_VALUE_TO_ADD,\n      payload: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch({\n      type: ADD_VALUE_TO_COUNT\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    className: \"m-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-lg\",\n      children: [\" Count is \", state.count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: increment,\n        children: \" Increment \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: decrement,\n        children: \" Decrement \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Add a lot!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: state.valueToAdd || '',\n        onChange: handleChange,\n        type: \"number\",\n        className: \"p-1 m-3 bg-gray-50 border border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \" Add it! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(CounterPage, \"KyHE/T5OOr2GiLhScPDarrNuUi8=\");\n_c = CounterPage;\nexport default CounterPage;\nvar _c;\n$RefreshReg$(_c, \"CounterPage\");","map":{"version":3,"names":["produce","useReducer","Button","Panel","jsxDEV","_jsxDEV","INCREMENT_COUNT","SET_VALUE_TO_ADD","DECREMENT_COUNT","ADD_VALUE_TO_COUNT","reducer","state","action","type","count","valueToAdd","payload","CounterPage","initialCount","_s","dispatch","increment","decrement","handleChange","event","value","parseInt","target","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Manah/Desktop/prod2/components/components/src/pages/CounterPage.js"],"sourcesContent":["import produce from 'immer';\r\nimport { useReducer } from 'react';\r\nimport Button from '../components/Button';\r\nimport Panel from '../components/Panel';\r\n\r\nconst INCREMENT_COUNT = 'increment';\r\nconst SET_VALUE_TO_ADD = 'change_value_to_add';\r\nconst DECREMENT_COUNT = 'decrement';\r\nconst ADD_VALUE_TO_COUNT = 'add_value_to_count';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNT:\r\n      state.count = state.count + 1;\r\n      return;\r\n    case DECREMENT_COUNT:\r\n      state.count = state.count - 1;\r\n      case ADD_VALUE_TO_COUNT:\r\n        return {\r\n          ...state,\r\n          count: state.count + state.valueToAdd,\r\n          valueToAdd: 0,\r\n        };\r\n    case SET_VALUE_TO_ADD:\r\n      return {\r\n        ...state,\r\n        valueToAdd: action.payload,\r\n      };\r\n      default:\r\n        return state;\r\n  }\r\n\r\n\r\n};\r\n\r\n function CounterPage({ initialCount }) {\r\n   // const [count, setCount] = useState(initialCount);\r\n  //  const [valueToAdd, setValueToAdd] = useState(0);\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    count: initialCount,\r\n    valueToAdd: 0,\r\n  });\r\n    const increment = () => {\r\n       dispatch({\r\n        type: INCREMENT_COUNT,\r\n\r\n       });\r\n    };\r\n    const decrement = () => {\r\n      dispatch({\r\n        type: DECREMENT_COUNT\r\n\r\n      });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const value = parseInt(event.target.value) || 0;\r\n\r\n       dispatch({\r\n        type: SET_VALUE_TO_ADD,\r\n        payload: value,\r\n       });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n     dispatch({\r\n      type: ADD_VALUE_TO_COUNT\r\n     })\r\n    };\r\n    \r\n\r\n    return (\r\n        <Panel className='m-3'>\r\n            <h1 className='text-lg'> Count is {state.count} </h1>\r\n            <div className='flex flex-row'>\r\n            <Button onClick={increment}> Increment </Button>\r\n            <Button onClick={decrement}> Decrement </Button>\r\n            </div>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Add a lot!</label>\r\n            <input \r\n            value={state.valueToAdd || '' } \r\n            onChange={handleChange} \r\n            type='number' \r\n            className='p-1 m-3 bg-gray-50 border border-gray-300' \r\n            />\r\n            \r\n            <Button> Add it! </Button>\r\n        </form>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default CounterPage;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,OAAO;AAC3B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAG,WAAW;AACnC,MAAMC,gBAAgB,GAAG,qBAAqB;AAC9C,MAAMC,eAAe,GAAG,WAAW;AACnC,MAAMC,kBAAkB,GAAG,oBAAoB;AAE/C,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,eAAe;MAClBK,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,GAAG,CAAC;MAC7B;IACF,KAAKN,eAAe;MAClBG,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,GAAG,CAAC;IAC7B,KAAKL,kBAAkB;MACrB,OAAO;QACL,GAAGE,KAAK;QACRG,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACI,UAAU;QACrCA,UAAU,EAAE;MACd,CAAC;IACL,KAAKR,gBAAgB;MACnB,OAAO;QACL,GAAGI,KAAK;QACRI,UAAU,EAAEH,MAAM,CAACI;MACrB,CAAC;IACD;MACE,OAAOL,KAAK;EAClB;AAGF,CAAC;AAEA,SAASM,WAAWA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACrC;EACD;EACA,MAAM,CAACR,KAAK,EAAES,QAAQ,CAAC,GAAGnB,UAAU,CAACD,OAAO,CAACU,OAAO,CAAC,EAAE;IACrDI,KAAK,EAAEI,YAAY;IACnBH,UAAU,EAAE;EACd,CAAC,CAAC;EACA,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAAC;MACRP,IAAI,EAAEP;IAEP,CAAC,CAAC;EACL,CAAC;EACD,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtBF,QAAQ,CAAC;MACPP,IAAI,EAAEL;IAER,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACF,KAAK,CAAC,IAAI,CAAC;IAEhDL,QAAQ,CAAC;MACRP,IAAI,EAAEN,gBAAgB;MACtBS,OAAO,EAAES;IACV,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAIJ,KAAK,IAAK;IAC5BA,KAAK,CAACK,cAAc,CAAC,CAAC;IAEzBT,QAAQ,CAAC;MACRP,IAAI,EAAEJ;IACP,CAAC,CAAC;EACH,CAAC;EAGD,oBACIJ,OAAA,CAACF,KAAK;IAAC2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAIyB,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,YAAU,EAACpB,KAAK,CAACG,KAAK,EAAC,GAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrD9B,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9B1B,OAAA,CAACH,MAAM;QAACkC,OAAO,EAAEf,SAAU;QAAAU,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChD9B,OAAA,CAACH,MAAM;QAACkC,OAAO,EAAEd,SAAU;QAAAS,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACV9B,OAAA;MAAMgC,QAAQ,EAAET,YAAa;MAAAG,QAAA,gBACzB1B,OAAA;QAAA0B,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzB9B,OAAA;QACAoB,KAAK,EAAEd,KAAK,CAACI,UAAU,IAAI,EAAI;QAC/BuB,QAAQ,EAAEf,YAAa;QACvBV,IAAI,EAAC,QAAQ;QACbiB,SAAS,EAAC;MAA2C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAEF9B,OAAA,CAACH,MAAM;QAAA6B,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAAChB,EAAA,CA1DSF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA4DrB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}